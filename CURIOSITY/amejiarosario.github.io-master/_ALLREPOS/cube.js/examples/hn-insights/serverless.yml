service: hn-insights

package:
  exclude:
    - secrets.yml

custom:
  secrets: ${file(secrets.yml):${self:provider.stage}}

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:*"
# Athena permissions        
        - "athena:*"
        - "s3:*"
        - "glue:*"
      Resource:
        - "*"
# When you uncomment vpc please make sure lambda has access to internet: https://medium.com/@philippholly/aws-lambda-enable-outgoing-internet-access-within-vpc-8dd250e11e12  
  vpc:
    securityGroupIds:
     - "${self:custom.secrets.SECURITY_GROUP_IDS}" # Your DB and Redis security groups here
    subnetIds:
     - "${self:custom.secrets.SUBNET_IDS}" # Your DB and Redis subnets here # Put here subnet with access to your DB, Redis and internet. For internet access 0.0.0.0/0 should be routed through NAT only for this subnet!
  environment:
    CUBEJS_EXT_DB_HOST: "${self:custom.secrets.CUBEJS_EXT_DB_HOST}"
    CUBEJS_EXT_DB_USER: "${self:custom.secrets.CUBEJS_EXT_DB_USER}"
    CUBEJS_EXT_DB_PASS: "${self:custom.secrets.CUBEJS_EXT_DB_PASS}"
    CUBEJS_EXT_DB_NAME: "${self:custom.secrets.CUBEJS_EXT_DB_NAME}"
    REDIS_URL: "${self:custom.secrets.REDIS_URL}"
    CUBEJS_AWS_REGION: "${self:custom.secrets.CUBEJS_AWS_REGION}"
    CUBEJS_AWS_S3_OUTPUT_LOCATION: "${self:custom.secrets.CUBEJS_AWS_S3_OUTPUT_LOCATION}"
    CUBEJS_DB_TYPE: athena
    CUBEJS_API_SECRET: "${self:custom.secrets.CUBEJS_API_SECRET}"
    CUBEJS_APP: "${self:service.name}-${self:provider.stage}"
    NODE_ENV: "${self:provider.stage}"
    AWS_ACCOUNT_ID:
      Fn::Join:
        - ""
        - - Ref: "AWS::AccountId"

package:
  exclude:
    - dashboard-app/**

functions:
  cubejs:
    handler: cube.api
    timeout: 30
    events:
      - http:
          path: /
          method: GET
      - http:
          path: /{proxy+}
          method: ANY
  cubejsProcess:
    handler: cube.process
    timeout: 630
    events:
      - sns: "${self:service.name}-${self:provider.stage}-process"
  hnCrawlerSchedule:
    handler: hnCrawler.schedule
    timeout: 60
    reservedConcurrency: 1
    events:
      - schedule:
          rate: rate(1 minute)
  hnCrawlerRefreshPartitions:
    handler: hnCrawler.refreshPartitions
    timeout: 60
    events:
      - schedule:
          rate: rate(5 minutes)

plugins:
  - serverless-express
