---
title: Heroku
listed: true
position: 8
---
{% extends index %}

{% block content %}

:markdown
  Here's how to set up cloud hosting with Heroku and Amazon S3.

  <div class="alert alert-info">
  We assume that you installed <strong>Heroku</strong> on your machine. Read the <a href="http://devcenter.heroku.com/articles/quickstart">Heroku quickstart guide</a> if you have not.
  </div>
  <div class="alert alert-info">
  We also assume that you followed the <strong><a href="http://doc.locomotivecms.com/get-started/install-engine">instructions to install the engine</a></strong>.
  </div>

  # 1. Add the Heroku extension

  If you run the engine for multisites, you need LocomotiveCMS to tell Heroku to update the domains when you add one in the LocomotiveCMS backoffice.

  Open your **Gemfile** file in your LocomotiveCMS application and add the following statement right after the one about the LocomotiveCMS engine.

      gem 'locomotive-heroku', '~> 0.1.0', :require => 'locomotive/heroku'
      gem 'thin', :group => 'production'

  While you’re at it, add the following line right before your first gem entry:

      ruby '1.9.3'

  Then, in your terminal, run:

      bundle install

  # 2. Create the Heroku app from your app folder

      git init .
      heroku create <YOUR APP NAME>
      heroku config:add BUNDLE_WITHOUT=development:test

  # 3. Set up a remote Mongodb database

  You can find more information [here.](http://docs.heroku.com/mongohq)

      heroku addons:add mongohq:sandbox

  Modify the configuration for the production mongodb database in the **config/mongoid.yml** file.

      production:
        uri: <%= ENV['MONGOHQ_URL'] %>

  # 4. Enable emails

  LocomotiveCMS needs to send emails and Heroku provides a nice way to send emails for free without configuring a  whole mail server on your own. You can find more information [here.](http://docs.heroku.com/sendgrid)

      heroku addons:add sendgrid:starter

  Add the following lines in your **config/environments/production.rb** file.

      config.action_mailer.delivery_method = :smtp
      config.action_mailer.smtp_settings = {
        :address        => 'smtp.sendgrid.net',
        :port           => 25,
        :authentication => :plain,
        :user_name      => ENV['SENDGRID_USERNAME'],
        :password       => ENV['SENDGRID_PASSWORD'],
        :domain         => ENV['SENDGRID_DOMAIN']
      }

  # 5. Configure Heroku to work with your Amazon S3 credentials

  Unless you modified your **config/initializers/carrierwave.rb** file, Carrierwave should be set up for Amazon S3 in the production environment.

      heroku config:add S3_KEY_ID=<YOUR S3 KEY ID>
      heroku config:add S3_SECRET_KEY=<YOUR S3 SECRET KEY>
      heroku config:add S3_BUCKET=<YOUR S3 BUCKET NAME>
      heroku config:add S3_BUCKET_REGION=<YOUR S3 BUCKET REGION>

  **Note:** For S3 Bucket Region var, here is the [correspondance table](http://docs.amazonwebservices.com/general/latest/gr/rande.html) between your ‘human’ bucket region name, and it’s endpoint :


  <table>
    <thead>
      <tr>
        <th>Region</th>
        <th>Location Constraint</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>US Standard *</td>
        <td>us-east-1</td>
      </tr>
      <tr>
        <td>US West (Oregon) Region</td>
        <td>us-west-2</td>
      </tr>
      <tr class="stripped-row">
        <td>US West (Northern California) Region</td>
        <td>us-west-1</td>
      </tr>
      <tr>
        <td>EU (Ireland) Region</td>
        <td>eu-west-1</td>
      </tr>
      <tr class="stripped-row">
        <td>Asia Pacific (Singapore) Region</td>
        <td>ap-southeast-1</td>
      </tr>
      <tr>
        <td>Asia Pacific (Tokyo) Region</td>
        <td>ap-northeast-1</td>
      </tr>
      <tr class="stripped-row">
        <td>South America (Sao Paulo) Region</td>
        <td>sa-east-1</td>
      </tr>
    </tbody>
  </table>

  # 6. Edit your Locomotive config file.

  Open your **config/initializers/locomotive.rb** file and add the
  following lines :

      config.hosting = {
        :target     => :heroku,
        :api_key    => ENV['HEROKU_API_KEY'],
        :app_name   => ENV['HEROKU_APP_NAME']
      }

  <div class="alert alert-info">
  <strong>Note:</strong> the following configuration is in the case you host a single website. If you want to use LocomotiveCMS as a multi-sites platform, you have to uncomment the lines relative to the multi-sites option and set your main domain name (ex: mycmsplatform.com).
  </div>

  # 7. Configure Heroku credentials

  Specify your credentials :

      heroku config:add HEROKU_API_KEY=<YOUR HEROKU API KEY>
      heroku config:add HEROKU_APP_NAME=<YOUR APP NAME>

  <div class='alert alert-info'>
  <strong>Note:</strong>
  Go to your <a href='https://api.heroku.com/account'>Heroku account</a> to get your API key.
  </div>

  # 8. Pre-compile your assets

  We suggest you to compile your assets locally so that if there is an issue with your assets, you will be able to debug it more easily.

  It is very important that you disable the **initialize\_on\_precompile** option in the **config/application.rb** file of your application:

      module YourApplication
        class Application < Rails::Application
          ...
          config.assets.initialize_on_precompile = false
          ...
        end
      end


  Then, in your terminal, run the following command

      bundle exec rake assets:precompile

  # 9. Launch it !

  In your terminal,

      git add .
      git commit -am "launch it"
      git push heroku master

  Then, visit your application

      heroku open

{% endblock %}
