load("//tools:defaults.bzl", "jasmine_node_test", "ts_library")

# Uses separate test rules to allow the tests to run in parallel

ts_library(
    name = "test_utils",
    testonly = True,
    srcs = [
        "mocks.ts",
        "runfile_helpers.ts",
        "test_support.ts",
    ],
    visibility = [
        ":__subpackages__",
        "//packages/compiler-cli/ngcc/test:__subpackages__",
        "//packages/language-service/test:__subpackages__",
    ],
    deps = [
        "//packages:types",
        "//packages/compiler",
        "//packages/compiler-cli",
        "@npm//typescript",
    ],
)

# extract_18n_spec
ts_library(
    name = "extract_i18n_lib",
    testonly = True,
    srcs = [
        "extract_i18n_spec.ts",
    ],
    deps = [
        ":test_utils",
        "//packages/compiler",
        "//packages/compiler-cli",
        "@npm//typescript",
    ],
)

jasmine_node_test(
    name = "extract_i18n",
    bootstrap = ["angular/tools/testing/init_node_spec.js"],
    data = [
        "//packages/core:npm_package",
    ],
    tags = [
        # Disabled as the tests pertain to the old extraction tool only, whereas the Ivy extraction
        # tool will likely work differently.
        "no-ivy-aot",
    ],
    deps = [
        ":extract_i18n_lib",
        "//packages/common:npm_package",
        "//packages/core",
        "//tools/testing:node",
        "@npm//minimist",
    ],
)

# ngc_spec
ts_library(
    name = "ngc_lib",
    testonly = True,
    srcs = [
        "ngc_spec.ts",
    ],
    deps = [
        ":test_utils",
        "//packages/compiler",
        "//packages/compiler-cli",
        "@npm//typescript",
    ],
)

jasmine_node_test(
    name = "ngc",
    timeout = "long",  # 900 seconds
    bootstrap = ["angular/tools/testing/init_node_spec.js"],
    data = [
        "//packages/common:npm_package",
        "//packages/core:npm_package",
        "//packages/platform-browser:npm_package",
        "//packages/router:npm_package",
    ],
    tags = [
        # Disabled as these tests are specific to the old ngc compiler, and not ngtsc which has its
        # own tests under //packages/compiler-cli/test/ngtsc.
        "no-ivy-aot",
    ],
    deps = [
        ":ngc_lib",
        "//packages/core",
        "//tools/testing:node",
        "@npm//minimist",
        "@npm//rxjs",
        "@npm//tsickle",
    ],
)

# ngctools_api_spec
ts_library(
    name = "ngtools_api_lib",
    testonly = True,
    srcs = [
        "ngtools_api_spec.ts",
    ],
    deps = [
        ":test_utils",
        "//packages/compiler",
        "//packages/compiler-cli",
        "//packages/private/testing",
        "@npm//typescript",
    ],
)

jasmine_node_test(
    name = "ngtools_api",
    bootstrap = ["angular/tools/testing/init_node_spec.js"],
    data = [
        "//packages/core:npm_package",
        "//packages/router:npm_package",
    ],
    deps = [
        ":ngtools_api_lib",
        "//packages/core",
        "//tools/testing:node",
    ],
)

# perform_watch_spec
ts_library(
    name = "perform_watch_lib",
    testonly = True,
    srcs = [
        "perform_watch_spec.ts",
    ],
    deps = [
        ":test_utils",
        "//packages/compiler",
        "//packages/compiler-cli",
        "@npm//typescript",
    ],
)

jasmine_node_test(
    name = "perform_watch",
    bootstrap = ["angular/tools/testing/init_node_spec.js"],
    data = [
        "//packages/core:npm_package",
    ],
    deps = [
        ":perform_watch_lib",
        "//packages/core",
        "//tools/testing:node",
    ],
)

# perform_compile_spec
ts_library(
    name = "perform_compile_lib",
    testonly = True,
    srcs = [
        "perform_compile_spec.ts",
    ],
    deps = [
        ":test_utils",
        "//packages/compiler",
        "//packages/compiler-cli",
    ],
)

jasmine_node_test(
    name = "perform_compile",
    bootstrap = ["angular/tools/testing/init_node_spec.js"],
    data = [
        "//packages/core:npm_package",
    ],
    deps = [
        ":perform_compile_lib",
        "//packages/core",
        "//tools/testing:node",
    ],
)
