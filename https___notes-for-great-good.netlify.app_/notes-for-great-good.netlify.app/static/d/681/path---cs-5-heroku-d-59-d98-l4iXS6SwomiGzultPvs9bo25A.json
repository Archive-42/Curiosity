{
  "data": {
    "markdownRemark": {
      "html": "<h4>Heroku</h4>\n<ul>\n<li>Takes your code and runs it in a specific environemnt and gives you back a URL to make it work</li>\n<li>Five free applications hosted</li>\n</ul>\n<h2><a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction\">Heroku Tutorial</a></h2>\n<h4>Assumptions:</h4>\n<ul>\n<li>Free Heroku account</li>\n<li>At least NPM and Node installed locally</li>\n<li>Credentials (login) for Heroku website and your command line for Heroku have to be the same</li>\n</ul>\n<h6>Heroku takes your package.json and exposes that to the internet</h6>\n<ul>\n<li>Downloads all your dependencies, bundles it together, takes your server.js (or wherever you're calling server.listen), executes that line, takes your npm start command and does what it needs to do with it.</li>\n<li>Can deploy an entire application on Heroku</li>\n</ul>\n<h4>Two different tools:</h4>\n<ul>\n<li><strong>ngrok</strong>: made for simple testing and forwarding port to WWW. Your site is unaccessible when your server is down.</li>\n<li><strong>heroku</strong>: taking your files and storing them in their git remote. They're creating a remote and storing it on their server. Takes your package.json and npm installs all the dependencies your app needs and serves it up to the WWW. Your site is deployed until you remove it.</li>\n</ul>\n<h4>Steps:</h4>\n<ul>\n<li>Set up Heroku account</li>\n<li>\n<p>Download command line interface into your app</p>\n<ul>\n<li>Piggyback off of git</li>\n<li>Push to it instead of github</li>\n<li><code class=\"language-text\">git push heroku master</code> is the command you will use</li>\n</ul>\n</li>\n<li>once you have a git init, you can keep your files on github and deploy to heroku</li>\n</ul>\n<p>When you have active changes:</p>\n<ul>\n<li>git add</li>\n<li>git commit</li>\n<li>\n<p>git push</p>\n<ul>\n<li>can push to github and then push to heroku</li>\n<li>once it reaches heroku server, it will deploy to WWW</li>\n</ul>\n</li>\n</ul>\n<p>App Ryan deployed:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3030</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">STATUS_USER_ERROR</span> <span class=\"token operator\">=</span> <span class=\"token number\">422</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// to enable parsing of json bodies for post requests</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/* Returns a list of dictionary words from the words.txt file. */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">readWords</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> contents <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFilesSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'words.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ut8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> contents<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> words <span class=\"token operator\">=</span> <span class=\"token function\">readWords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> words<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> wor <span class=\"token operator\">=</span> words<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> guesses <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> wordsSoFar <span class=\"token operator\">=</span> word\n    <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>guesses<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> letter<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> wordsSoFar<span class=\"token punctuation\">,</span> guesses <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/guess'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> letter <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>letter<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>letter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> <span class=\"token string\">'Must provide a letter'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> <span class=\"token string\">'Must guess a single letter'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>guesses<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`You've already guessed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>letter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">guesses</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> guesses <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Magic happening on </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In this step, you will deploy the app to Heroku:\n<code class=\"language-text\">heroku create</code></p>\n<ul>\n<li>When you create an app, a git remote is also created and associated with your local git repository</li>\n</ul>\n<p><code class=\"language-text\">heroku create node-hangman-lambda</code></p>\n<ul>\n<li>Two different urls to fetch and push to (one for github and one for heroku)</li>\n</ul>\n<p>Question:</p>\n<ul>\n<li>\n<p>Is there a deployment feature to let us view the app we create from different browsers and devices?</p>\n<ul>\n<li>Don't know</li>\n</ul>\n</li>\n</ul>\n<p>Heroku gives you a URL you can use for your application</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">- git add .\n- git status\n- git commit -m &quot;made the h1 say foobar&quot;\n- git push heroku master</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>As you're committing, you're deploying. Can redeploy as soon as you commit.</p>\n<p>If you look at your app:</p>\n<ul>\n<li>\n<p>Click More</p>\n<ul>\n<li>Application logs</li>\n<li>Info about what broke</li>\n<li>Can look up errors</li>\n<li>Heroku has a cheatsheet for looking up errors</li>\n</ul>\n</li>\n</ul>\n<p>If you pay for their upgraded tiers, you can use it as a hosting service with custom URLS.</p>\n<p>In the free tier, it makes your app go to sleep after a while of inactivity.</p>",
      "frontmatter": {
        "date": "2018-06-23",
        "title": "CS5: Heroku",
        "chapter": null,
        "subtitle": null,
        "tags": ["CS5", "Heroku", "DevOps"],
        "path": "/CS5-Heroku"
      }
    }
  },
  "pageContext": {
    "isCreatedByStatefulCreatePages": false,
    "pathSlug": "/CS5-Heroku",
    "prev": {
      "frontmatter": {
        "path": "/CS5-Docker",
        "title": "CS5: Docker",
        "tags": ["CS5", "docker", "DevOps"],
        "subtitle": null,
        "chapter": null
      }
    },
    "next": {
      "frontmatter": {
        "path": "/CS5-Netlify",
        "title": "CS5: Netlify",
        "tags": ["CS5", "Netlify", "DevOps"],
        "subtitle": null,
        "chapter": null
      }
    }
  }
}
