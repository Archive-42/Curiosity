[preface]
== Introduction

You are about to become a better programmer and grasp the fundamentals of Algorithms and Data Structures.
Let's take a moment to explain how we are going to do that.

This book is divided into four main parts:

In *Part 1*, we will cover the framework to compare and analyze algorithms: Big O notation. When you have multiple solutions to a problem, this framework comes in handy to know which solution will scale better.

In *Part 2*, we will go over linear data structures and trade-offs about using one over another.
After reading this part, you will know how to trade space for speed using Maps, when to use a linked list over an array, or what problems can be solved using a stack over a queue.

*Part 3* is about graphs and trees and its algorithms.
Here you'll learn how to translate real-world problems into graphs and different algorithms to solve them.

*Part 4* will cover tools and techniques to solve algorithmic problems. This section is for those who want to get better at recognizing patterns and improving problem-solving skills. We cover sorting algorithms and standard practices like dynamic programming, greedy algorithms, divide and conquer, and more.

Finally, in *Appendix A*, we summarize all the topics covered in this book in a cheatsheet. *Appendix B and C* covers self-balancing binary search tree algorithms. *Appendix D* cover the solutions to the problems presented at the end of each chapter.

Let's get started.
